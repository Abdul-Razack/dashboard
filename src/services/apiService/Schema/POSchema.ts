import { z } from 'zod';

export const PurchaseOrderSchema = z.object({
  data: z.object({
    bank_charge: z.number().nullable().optional(),
    created_at: z.string(),
    currency_id: z.number(),
    customer_contact_manager: z.object({
      address: z.string(),
      attention: z.string(),
      city: z.string(),
      country: z.string(),
      created_at: z.string(),
      customer_id: z.number(),
      email: z.string().nullable(),
      fax: z.string().nullable(),
      id: z.number(),
      modified_at: z.string(),
      phone: z.string(),
      remarks: z.string().nullable(),
      state: z.string(),
      zip_code: z.string(),
    }),
    customer_contact_manager_id: z.number(),
    customer_id: z.number().nullable(),
    discount: z.number().nullable().optional(),
    fob_id: z.number(),
    freight: z.number().nullable().optional(),
    id: z.number(),
    rfq_ids: z.array(z.number()),
    quotations: z.array(z.object({
      expiry_date: z.string(),
      id: z.number(),
      vendor_quotation_date: z.string(),
      vendor_quotation_no: z.string().nullable().optional()
    })),
    items: z.array(
      z.object({
        condition_id: z.number(),
        id: z.number(),
        note: z.string().nullable().optional(),
        part_number_id: z.number(),
        price: z.number(),
        purchase_order_id: z.number(),
        qty: z.number(),
        unit_of_measure_id: z.number(),
      })
    ),
    user: z.object({
      created_at: z.string(),
      email: z.string(),
      id: z.number(),
      modified_at: z.string(),
      username: z.string(),
    }),
    miscellaneous_charges: z.number().nullable().optional(),
    modified_at: z.string(),
    payment_mode_id: z.number(),
    payment_term_id: z.number(),
    priority_id: z.number(),
    remark: z.string().nullable().optional(),
    ship_account_id: z.number(),
    ship_customer_id: z.number().nullable().optional(),
    ship_customer_shipping_address_id: z.number(),
    ship_mode_id: z.number(),
    ship_type_id: z.number(),
    user_id: z.number(),
    vat: z.number().nullable().optional(),
    version: z.number().nullable().optional(),
    subtotal: z.number().nullable().optional(),
    total_price: z.number().nullable().optional(),
  }),
  status: z.boolean(),
});
